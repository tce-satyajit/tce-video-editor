{"ast":null,"code":"import _asyncToGenerator from \"/Users/satyajitpujari/projects/ce6/tce-video-editor/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"./services/ffmpeg.service\";\nimport * as i2 from \"./video-input/video-input.component\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./video-timeline/video-timeline.component\";\nimport * as i5 from \"./video-output/video-output.component\";\n\nfunction AppComponent_app_video_timeline_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-video-timeline\", 4);\n    i0.ɵɵlistener(\"timeChange\", function AppComponent_app_video_timeline_1_Template_app_video_timeline_timeChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onTimeChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"duration\", ctx_r0.videoDuration);\n  }\n}\n\nfunction AppComponent_app_video_output_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-video-output\", 5);\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"videoUrl\", ctx_r1.trimmedVideoUrl);\n  }\n}\n\nexport class AppComponent {\n  constructor(ffmpegService) {\n    this.ffmpegService = ffmpegService;\n    this.videoDuration = 0;\n    this.startTime = 0;\n    this.endTime = 0;\n  }\n\n  onFileSelected(file) {\n    this.selectedFile = file;\n    const video = document.createElement('video');\n    video.src = URL.createObjectURL(file);\n\n    video.onloadedmetadata = () => {\n      this.videoDuration = video.duration;\n      this.endTime = video.duration;\n    };\n  }\n\n  onTimeChange(times) {\n    this.startTime = times.start;\n    this.endTime = times.end;\n  }\n\n  trimVideo() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const trimmedBlob = yield _this.ffmpegService.trimVideo(_this.selectedFile, _this.startTime, _this.endTime);\n      _this.trimmedVideoUrl = URL.createObjectURL(trimmedBlob);\n    })();\n  }\n\n  get canTrim() {\n    return this.startTime >= 0 && this.endTime > this.startTime;\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.FfmpegService));\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 5,\n  vars: 3,\n  consts: [[3, \"fileSelected\"], [3, \"duration\", \"timeChange\", 4, \"ngIf\"], [3, \"disabled\", \"click\"], [3, \"videoUrl\", 4, \"ngIf\"], [3, \"duration\", \"timeChange\"], [3, \"videoUrl\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"app-video-input\", 0);\n      i0.ɵɵlistener(\"fileSelected\", function AppComponent_Template_app_video_input_fileSelected_0_listener($event) {\n        return ctx.onFileSelected($event);\n      });\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(1, AppComponent_app_video_timeline_1_Template, 1, 1, \"app-video-timeline\", 1);\n      i0.ɵɵelementStart(2, \"button\", 2);\n      i0.ɵɵlistener(\"click\", function AppComponent_Template_button_click_2_listener() {\n        return ctx.trimVideo();\n      });\n      i0.ɵɵtext(3, \"Trim Video\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(4, AppComponent_app_video_output_4_Template, 1, 1, \"app-video-output\", 3);\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.videoDuration);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"disabled\", !ctx.canTrim);\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngIf\", ctx.trimmedVideoUrl);\n    }\n  },\n  directives: [i2.VideoInputComponent, i3.NgIf, i4.VideoTimelineComponent, i5.VideoOutputComponent],\n  encapsulation: 2\n});","map":{"version":3,"sources":["/Users/satyajitpujari/projects/ce6/tce-video-editor/src/app/app.component.ts"],"names":[],"mappings":"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","sourcesContent":["import { Component } from '@angular/core';\nimport { FfmpegService } from './services/ffmpeg.service';\n\n@Component({\n  selector: 'app-root',\n  template: `\n    <app-video-input (fileSelected)=\"onFileSelected($event)\"></app-video-input>\n    <app-video-timeline *ngIf=\"videoDuration\" [duration]=\"videoDuration\" (timeChange)=\"onTimeChange($event)\"></app-video-timeline>\n    <button (click)=\"trimVideo()\" [disabled]=\"!canTrim\">Trim Video</button>\n    <app-video-output *ngIf=\"trimmedVideoUrl\" [videoUrl]=\"trimmedVideoUrl\"></app-video-output>\n  `\n})\nexport class AppComponent {\n  selectedFile!: File;\n  videoDuration: number = 0;\n  startTime: number = 0;\n  endTime: number = 0;\n  trimmedVideoUrl: string | undefined;\n\n  constructor(private ffmpegService: FfmpegService) {}\n\n  onFileSelected(file: File) {\n    this.selectedFile = file;\n    const video = document.createElement('video');\n    video.src = URL.createObjectURL(file);\n    video.onloadedmetadata = () => {\n      this.videoDuration = video.duration;\n      this.endTime = video.duration;\n    };\n  }\n\n  onTimeChange(times: { start: number, end: number }) {\n    this.startTime = times.start;\n    this.endTime = times.end;\n  }\n\n  async trimVideo() {\n    const trimmedBlob = await this.ffmpegService.trimVideo(this.selectedFile, this.startTime, this.endTime);\n    this.trimmedVideoUrl = URL.createObjectURL(trimmedBlob);\n  }\n\n  get canTrim() {\n    return this.startTime >= 0 && this.endTime > this.startTime;\n  }\n}\n"],"sourceRoot":""},"metadata":{},"sourceType":"module"}